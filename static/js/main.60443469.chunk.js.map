{"version":3,"sources":["components/Dependent.js","components/BenefitsForm.js","components/Employee.js","components/BenefitsList.js","components/BenefitsHeading.js","App.js","serviceWorker.js","index.js"],"names":["props","className","dependent","BenefitsForm","currentEmployee","currentDependent","inputPerson","addEmployee","addDependent","md","onSubmit","e","htmlFor","type","name","value","onChange","placeholder","id","color","onClick","disabled","dependents","map","index","Dependent","key","Employee","employee","deleteEmployee","BenefitsList","state","employees","startsWithA","cost","dependentsWithA","totalCost","totalDependents","currentPerson","target","setState","newEmployees","removedEmployee","splice","newTotalCost","newTotalDependents","length","preventDefault","employeeList","charAt","employeeCost","dependentsCost","unshift","currentEmployeeVar","this","newDependent","style","width","parseFloat","Math","round","toFixed","React","Component","BenefitsHeading","sm","size","offset","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60443469.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default props =>\n    <div className=\"d-flex flex-row\" >\n      <div className=\"col d-flex justify-content-start pt-2\">Dependent: {props.dependent}</div>\n    </div>\n","import React from \"react\";\nimport { MDBBtn, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport Dependent from \"./Dependent\";\n\nconst BenefitsForm = ({ currentEmployee, currentDependent, inputPerson, addEmployee, addDependent })  => (\n      <MDBContainer>\n        <MDBRow className=\"d-flex justify-content-center py-4\">\n          <MDBCol md=\"6\" className=\"\">\n            <form onSubmit={(e) => addEmployee(e)} >\n              <p className=\"h4 text-center mb-4\">Enter Employee Information</p>\n              <label htmlFor=\"employeeFirstName\" className=\"grey-text\">\n                Employee Full Name\n              </label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={currentEmployee.name}\n                onChange={inputPerson}\n                placeholder=\"John Smith\"\n                id=\"employeeFirstName\"\n                className=\"form-control\"\n              />\n              <br />\n\n              <label\n                htmlFor=\"depFullName1\"\n                className=\"grey-text\"\n              >\n                Dependent Full Name (Optional)\n              </label>\n              <div className=\"form-inline d-flex justify-content-between\">\n                <input\n                  type=\"text\"\n                  value={currentDependent}\n                  name=\"currentDependent\"\n                  onChange={inputPerson}\n                  placeholder=\"Jane Smith\"\n                  id=\"depFullName1\"\n                  className=\"form-control\"\n                />\n                <MDBBtn\n                  color=\"info\"\n                  className=\" depButton\"\n                  onClick={addDependent}\n                  disabled={currentDependent ? false : true}\n                >\n                  Add Dependent\n                </MDBBtn>\n              </div>\n                {\n                  currentEmployee.dependents && currentEmployee.dependents.map((dependent, index) => (\n                    <Dependent\n                      key={index}\n                      dependent={dependent}\n                    />\n                  ))}\n              <br />\n\n              <div className=\"text-center mt-4\">\n                <MDBBtn\n                  color=\"primary\"\n                  type=\"submit\"\n                  className=\" btn-block\"\n                  onClick={(e) => addEmployee(e)}\n                  disabled={currentEmployee.name && !currentDependent ? false : true}\n                >\n                  Save Employee & Dependents\n                </MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n  )\nexport default BenefitsForm;\n","import React from \"react\";\nimport { MDBListGroupItem, MDBBtn } from \"mdbreact\";\nimport Dependent from \"./Dependent\";\n\nconst Employee = ({ employee, deleteEmployee, id })  => (\n  <MDBListGroupItem>\n    <div className=\"d-flex flex-row\" >\n      <div className=\"col d-flex justify-content-start pt-1 \">Employee: {employee.name}</div>\n      <div className=\"col d-flex justify-content-end\"><MDBBtn color=\"danger\" onClick={() => deleteEmployee(id)}>Delete Employee</MDBBtn></div>\n    </div>\n    {\n      employee.dependents && employee.dependents.map((dependent, index) => (\n        <Dependent\n          key={index}\n          dependent={dependent}\n         />\n     ))}\n  </MDBListGroupItem>\n)\nexport default Employee\n","import React from \"react\";\nimport BenefitsForm from \"./BenefitsForm\";\nimport Employee from \"./Employee\";\nimport { MDBListGroup, MDBContainer, MDBBtn } from \"mdbreact\";\n\nclass BenefitsList extends React.Component{\n\n  state = {\n    employees: [],\n    currentEmployee: {\n      name: \"\",\n      startsWithA: false,\n      dependents: [],\n      cost: 0,\n      dependentsWithA: 0\n    },\n    totalCost: 0,\n    totalDependents: 0,\n    currentDependent: \"\"\n  };\n\n  inputPerson = (e) => {\n    const { currentDependent, currentEmployee } = this.state;\n    let currentPerson = e.target.name === \"name\" ? currentEmployee : currentDependent;\n    if(e.target.name === \"name\"){\n      currentPerson[e.target.name] = e.target.value;\n      this.setState({currentEmployee: currentPerson});\n    }else{\n      currentPerson = e.target.value;\n      this.setState({currentDependent: currentPerson});\n    }\n  };\n\n  deleteEmployee = (id) => {\n    const { employees, totalCost, totalDependents } = this.state;\n    let newEmployees = employees;\n    let removedEmployee = employees.splice(id, 1);\n    let newTotalCost = totalCost-removedEmployee[0].cost;\n    let newTotalDependents = totalDependents-removedEmployee[0].dependents.length;\n    this.setState({ employees: newEmployees, totalCost: newTotalCost, totalDependents: newTotalDependents });\n  };\n\n  addEmployee = (e) => {\n    e.preventDefault();\n    const { employees, currentEmployee, totalCost, totalDependents } = this.state;\n    let employeeList = employees;\n    currentEmployee.startsWithA = currentEmployee.name.charAt(0) === 'a' || currentEmployee.name.charAt(0) === 'A' ? true : false;\n\n    let newTotalDependents = totalDependents + currentEmployee.dependents.length;\n\n    let employeeCost = currentEmployee.startsWithA ? 900 : 1000;\n    let dependentsCost = ((currentEmployee.dependents.length - currentEmployee.dependentsWithA)*500)+(currentEmployee.dependentsWithA*450);\n    currentEmployee.cost = employeeCost+dependentsCost;\n    let newTotalCost = totalCost+currentEmployee.cost;\n\n    employeeList.unshift(currentEmployee);\n\n    let resetForm = {\n      name: \"\",\n      startsWithA: false,\n      dependents: [],\n      cost: 0,\n      dependentsWithA: 0\n    }\n    this.setState({employees: employeeList, currentEmployee: resetForm, totalCost: newTotalCost, totalDependents: newTotalDependents});\n  };\n\n  addDependent = () =>{\n    const { currentEmployee, currentDependent } = this.state;\n    let currentEmployeeVar = currentEmployee;\n    currentEmployeeVar.dependents.unshift(currentDependent);\n    let dependentsWithA = currentEmployee.dependentsWithA;\n    dependentsWithA += currentDependent.charAt(0) === 'a' || currentDependent.charAt(0) === 'A' ? 1 : 0;\n    currentEmployeeVar.dependentsWithA = dependentsWithA;\n    this.setState({ currentEmployeeVar: currentEmployee, currentDependent: '' });\n  }\n\n  render(){\n    const { currentEmployee, currentDependent, employees, totalCost, totalDependents } = this.state;\n    return(\n      <div>\n        <div>\n          <BenefitsForm\n            addEmployee={this.addEmployee}\n            addDependent={(newDependent) => this.addDependent(newDependent)}\n            currentDependent={currentDependent}\n            currentEmployee={currentEmployee}\n            inputPerson={this.inputPerson}\n            />\n\n          <div className=\"m-2\">\n            <MDBContainer className=\"d-flex justify-content-center py-4\">\n              <MDBListGroup style={{ width: \"40rem\" }}>\n              <div className=\"pb-2\">\n                Current List of Employees:\n              </div>\n                {employees.map((employee, index) => (\n                  <Employee\n                    key={index}\n                    employee={employee}\n                    id={index}\n                    deleteEmployee={(id) => this.deleteEmployee(id)}\n                    />\n                ))}\n              </MDBListGroup>\n            </MDBContainer>\n          </div>\n        </div>\n\n        <MDBContainer className=\"my-5\">\n            <div>Total Employees: {employees.length}</div>\n            <div>Total Dependents: {totalDependents}</div>\n            <div>Deductions Per Period: ${parseFloat(Math.round((totalCost/26) * 100) / 100).toFixed(2)}</div>\n            <div>Total Yearly Cost: ${totalCost}</div>\n        </MDBContainer>\n        <MDBBtn className=\"mb-5\" color=\"danger\" onClick={() => this.setState({ employees: [] , totalCost: 0})}>Remove all employees...</MDBBtn>\n      </div>\n    );\n  }\n}\nexport default BenefitsList;\n","import React from \"react\";\nimport { MDBRow, MDBCol, MDBContainer } from \"mdbreact\";\n\nconst BenefitsHeading = () => (\n  <div>\n    <header className=\"App-header\">\n      <div>Benefits Calculator</div>\n    </header>\n    <MDBContainer>\n      <MDBRow className=\"my-5 col-md-8 offset-md-2\">\n        <MDBCol className=\"\" sm=\"12\" md={{ size: 10, offset: 1 }}>\n          This is a simple application to get a quote for how much your cost will be to give your employees\n          benefits. A portion of these costs are deducted from your employees paycheck, so this application\n          handles that deduction.\n        </MDBCol>\n      </MDBRow>\n      <MDBRow className=\"mb-3\">\n        <MDBCol>\n          Here is the cost breakdown:\n        </MDBCol>\n      </MDBRow>\n      <MDBRow>\n        <MDBCol className=\"text-left d-flex justify-content-center\" sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <ul>\n            <li className=\"pb-1\">The cost of benefits is $1000/year for each employee</li>\n            <li className=\"pb-1\">Each dependent (children and possibly spouses) incurs a cost of\n                $500/year</li>\n            <li className=\"pb-1\">Anyone whose name starts with ‘A’ gets a 10% discount, employee or\n                dependent</li>\n          </ul>\n        </MDBCol>\n      </MDBRow>\n      <MDBRow className=\"mb-3\">\n        <MDBCol>\n          Here are the givens:\n        </MDBCol>\n      </MDBRow>\n      <MDBRow>\n        <MDBCol className=\"text-left d-flex justify-content-center\" sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <ul>\n            <li className=\"pb-1\">All employees are paid $2000 per paycheck before deductions</li>\n            <li className=\"pb-1\">There are 26 paychecks in a year</li>\n          </ul>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  </div>\n)\nexport default BenefitsHeading;\n","import React from 'react';\nimport './App.css';\nimport BenefitsList from './components/BenefitsList';\nimport BenefitsHeading from './components/BenefitsHeading';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <BenefitsHeading />\n      <div>\n        <BenefitsList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}